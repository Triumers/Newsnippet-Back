name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-java@v3
          with:
                distribution: 'corretto'
                java-version: '17'
        - name: Gradle 명령 실행을 위한 권한을 부여합니다
          run: chmod +x gradlew

        - name: Gradle build를 수행합니다
          run: ./gradlew build

        - name: 테스트 결과를 PR에 코멘트로 등록합니다
          uses: EnricoMi/publish-unit-test-result-action@v1
          if: always()
          with:
            files: '**/build/test-results/test/TEST-*.xml'

        - name: 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록합니다
          uses: mikepenz/action-junit-report@v3
          if: always()
          with:
            report_paths: '**/build/test-results/test/TEST-*.xml'
            token: ${{ github.token }}

        - name: build 실패 시 Slack으로 알립니다
          uses: Triumers/action-slack@v3
          with:
            status: ${{ job.status }}
            author_name: 백엔드 빌드 실패 알림
            fields: repo, message, commit, author, action, eventName, ref, workflow, job, took
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            if: failure()

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
